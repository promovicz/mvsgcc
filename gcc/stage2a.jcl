//GCCGEN   JOB CLASS=C,REGION=0K,TIME=1440
//*
//CREATE   PROC GCCPREF='GCC'
//DELETE   EXEC PGM=IEFBR14
//DD11     DD DSN=&GCCPREF..NCALIB,DISP=(MOD,DELETE),
//       UNIT=SYSALLDA,SPACE=(TRK,(0))
//*
//ALLOC    EXEC PGM=IEFBR14
//DD11     DD DSN=&GCCPREF..NCALIB,DISP=(,CATLG),
// DCB=(RECFM=U,LRECL=0,BLKSIZE=6144),
// SPACE=(6144,(1000,1000,44)),UNIT=SYSALLDA
//         PEND
//*
//ST2CMP   PROC GCCPREF='GCC',MEMBER='',
// PDPPREF='PDPCLIB',
// COS1='-Os -S -ansi -pedantic-errors -remap -DHAVE_CONFIG_H',
// COS2='-DIN_GCC -DPUREISO -o dd:out -'
//*
//COMP     EXEC PGM=STAGE1,
// PARM='&COS1 &COS2'
//STEPLIB  DD DSN=&GCCPREF..TMPLOAD,DISP=SHR
//SYSIN    DD DSN=&GCCPREF..SOURCE(&MEMBER),DISP=SHR
//INCLUDE  DD DSN=&GCCPREF..INCLUDE,DISP=SHR,DCB=BLKSIZE=32720
//         DD DSN=&PDPPREF..INCLUDE,DISP=SHR
//SYSINCL  DD DSN=&GCCPREF..INCLUDE,DISP=SHR,DCB=BLKSIZE=32720
//         DD DSN=&PDPPREF..INCLUDE,DISP=SHR
//OUT      DD DSN=&GCCPREF..S2(&MEMBER),DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTERM  DD SYSOUT=*
//*
//ASM      EXEC PGM=ASMA90,
//            PARM='DECK,NOLIST',
//            COND=(4,LT,COMP)
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR,DCB=BLKSIZE=32720
//         DD DSN=&PDPPREF..MACLIB,DISP=SHR
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(20,10))
//SYSUT2   DD UNIT=SYSALLDA,SPACE=(CYL,(10,10))
//SYSUT3   DD UNIT=SYSALLDA,SPACE=(CYL,(10,10))
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DUMMY
//SYSGO    DD DUMMY
//SYSPUNCH DD DSN=&&OBJSET,UNIT=SYSALLDA,SPACE=(80,(4000,4000)),
//            DISP=(,PASS)
//SYSIN    DD DSN=&GCCPREF..S2(&MEMBER),DISP=SHR
//*
//LKED     EXEC PGM=IEWL,PARM='NCAL',
//            COND=((4,LT,COMP),(4,LT,ASM))
//SYSLIN   DD DSN=&&OBJSET,DISP=(OLD,DELETE)
//SYSLMOD  DD DSN=&GCCPREF..NCALIB(&MEMBER),DISP=SHR
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(2,1))
//SYSPRINT DD SYSOUT=*
//         PEND
//*
//NEWNCAL  EXEC CREATE
//*
//ALIAS    EXEC ST2CMP,MEMBER=ALIAS
//ALLOCA   EXEC ST2CMP,MEMBER=ALLOCA
//ASPRINTF EXEC ST2CMP,MEMBER=ASPRINTF
//ATTRIBS  EXEC ST2CMP,MEMBER=ATTRIBS
//BB@REORD EXEC ST2CMP,MEMBER=BB@REORD
//BITMAP   EXEC ST2CMP,MEMBER=BITMAP
//BUILTINS EXEC ST2CMP,MEMBER=BUILTINS
//C@AUX@IN EXEC ST2CMP,MEMBER=C@AUX@IN
//C@COMMON EXEC ST2CMP,MEMBER=C@COMMON
//C@CONVER EXEC ST2CMP,MEMBER=C@CONVER
//C@DECL   EXEC ST2CMP,MEMBER=C@DECL
//C@ERRORS EXEC ST2CMP,MEMBER=C@ERRORS
//C@FORMAT EXEC ST2CMP,MEMBER=C@FORMAT
//C@LANG   EXEC ST2CMP,MEMBER=C@LANG
//C@LEX    EXEC ST2CMP,MEMBER=C@LEX
//C@OBJC@C EXEC ST2CMP,MEMBER=C@OBJC@C
//C@PARSE  EXEC ST2CMP,MEMBER=C@PARSE
//C@PRAGMA EXEC ST2CMP,MEMBER=C@PRAGMA
//C@SEMANT EXEC ST2CMP,MEMBER=C@SEMANT
//C@TYPECK EXEC ST2CMP,MEMBER=C@TYPECK
//CALLER@S EXEC ST2CMP,MEMBER=CALLER@S
//CALLS    EXEC ST2CMP,MEMBER=CALLS
//CFG      EXEC ST2CMP,MEMBER=CFG
//CFGANAL  EXEC ST2CMP,MEMBER=CFGANAL
//CFGBUILD EXEC ST2CMP,MEMBER=CFGBUILD
//CFGCLEAN EXEC ST2CMP,MEMBER=CFGCLEAN
//CFGLAYOU EXEC ST2CMP,MEMBER=CFGLAYOU
//CFGLOOP  EXEC ST2CMP,MEMBER=CFGLOOP
//CFGRTL   EXEC ST2CMP,MEMBER=CFGRTL
//COMBINE  EXEC ST2CMP,MEMBER=COMBINE
//CONFLICT EXEC ST2CMP,MEMBER=CONFLICT
//CONVERT  EXEC ST2CMP,MEMBER=CONVERT
//CPPDEFAU EXEC ST2CMP,MEMBER=CPPDEFAU
//CPPERROR EXEC ST2CMP,MEMBER=CPPERROR
//CPPEXP   EXEC ST2CMP,MEMBER=CPPEXP
//CPPFILES EXEC ST2CMP,MEMBER=CPPFILES
//CPPHASH  EXEC ST2CMP,MEMBER=CPPHASH
//CPPINIT  EXEC ST2CMP,MEMBER=CPPINIT
//CPPLEX   EXEC ST2CMP,MEMBER=CPPLEX
//CPPLIB   EXEC ST2CMP,MEMBER=CPPLIB
//CPPMACRO EXEC ST2CMP,MEMBER=CPPMACRO
//CPPMAIN  EXEC ST2CMP,MEMBER=CPPMAIN
//CPPSPEC  EXEC ST2CMP,MEMBER=CPPSPEC
//CSE      EXEC ST2CMP,MEMBER=CSE
//CSELIB   EXEC ST2CMP,MEMBER=CSELIB
//DEBUG    EXEC ST2CMP,MEMBER=DEBUG
//DEPENDEN EXEC ST2CMP,MEMBER=DEPENDEN
//DF       EXEC ST2CMP,MEMBER=DF
//DIAGNOST EXEC ST2CMP,MEMBER=DIAGNOST
//DOMINANC EXEC ST2CMP,MEMBER=DOMINANC
//DWARF2AS EXEC ST2CMP,MEMBER=DWARF2AS
//DWARF2OU EXEC ST2CMP,MEMBER=DWARF2OU
//EMIT@RTL EXEC ST2CMP,MEMBER=EMIT@RTL
//EXCEPT   EXEC ST2CMP,MEMBER=EXCEPT
//EXPLOW   EXEC ST2CMP,MEMBER=EXPLOW
//EXPMED   EXEC ST2CMP,MEMBER=EXPMED
//EXPR     EXEC ST2CMP,MEMBER=EXPR
//FIBHEAP  EXEC ST2CMP,MEMBER=FIBHEAP
//FINAL    EXEC ST2CMP,MEMBER=FINAL
//FLOW     EXEC ST2CMP,MEMBER=FLOW
//FOLD@CON EXEC ST2CMP,MEMBER=FOLD@CON
//FUNCTION EXEC ST2CMP,MEMBER=FUNCTION
//
